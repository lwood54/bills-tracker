// Typical Prisma Workflow
// https://www.prisma.io/docs/concepts/overview/what-is-prisma#typical-prisma-workflows

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password   Password?
  notes      Note[]
  bills      Bill[]
  categories Category[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Bill {
  id           String   @id @default(cuid())
  balance      Float
  dayDue       Int
  interestRate Float
  payment      Float
  title        String
  // category     Category @relation(fields: [categoryId], references: [id])
  // categoryId   String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user         User    @relation(fields: [userId], references: [id])
  userId       String
}

model Category {
  id     String  @id @default(cuid())
  title  String

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  // Bill   Bill[]
}
